let os1 = [1.0; -1.0; 1.0; -1.0];;
let os2 = [-1.0; -1.0; 1.0; -1.0];;
let os3 = [-1.0; -1.0; 1.0; 1.0];;
let w =
[[0.; -1.; 1.; -1.]; [-1.; 0.; -1.; 1.]; [1.; -1.; 0.; -1.];
[-1.; 1.; -1.; 0.]];;
let we=[[0.0;-1.0];[-1.0;0.0]];;
let oi=[-1.0;-1.0];;
let w2 =
[[0.; 1.; -1.; -1.]; [1.; 0.; -3.; 1.]; [-1.; -3.; 0.; -1.];
[-1.; 1.; -1.; 0.]];;


netAll([1.0; -1.0; 1.0; -1.0], [[0.; -1.; 1.; -1.]; [-1.; 0.; -1.; 1.]; [1.; -1.; 0.; -1.]; [-1.; 1.; -1.; 0.]]);;
netAll([-1.0; -1.0; 1.0; -1.0], [[0.; -1.; 1.; -1.]; [-1.; 0.; -1.; 1.]; [1.; -1.; 0.; -1.]; [-1.; 1.; -1.; 0.]]);;

hop11Activation(-6.,-9.);;
hop11Activation(1.,512.);;

nextState([1.0; -1.0; 1.0; -1.0],w);;
nextState(nextState([1.0; -1.0; 1.0; -1.0],w2),w2);;

updateN([-1.0;-1.0],[[0.0;-1.0];[-1.0;0.0]],5);;
updateN([-1.0;-1.0],[[0.0;-1.0];[-1.0;0.0]],10);;

hopTrainAstate([-1.0; 1.0; 1.0; -1.0]);;
hopTrainAstate([-1.0; -1.0; -1.0; -1.0]);;

hopTrain([[-1.0; -1.0; 1.0; -1.0];[-1.0; -1.0; 1.0; 1.0]]);;
hopTrain([[1.0; -1.0; 1.0; -1.0];[-1.0; -1.0; 1.0; 1.0]]);;
